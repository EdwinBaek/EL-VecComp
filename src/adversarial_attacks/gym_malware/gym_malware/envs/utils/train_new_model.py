import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))))

import joblib
import numpy as np
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.model_selection import train_test_split
from gym_malware.envs.utils.pefeatures import PEFeatureExtractor
from gym_malware.envs.utils.interface import get_available_sha256, fetch_file


if __name__ == "__main__":
    # 특성 추출기 초기화
    feature_extractor = PEFeatureExtractor()

    # 데이터 로드 및 특성 추출
    sha256_list = get_available_sha256()
    X = []
    y = []

    for sha256 in sha256_list:
        try:
            bytez = fetch_file(sha256)
            feature_vector = feature_extractor.extract(bytez)
            X.append(feature_vector)

            # 여기서는 간단히 무작위로 레이블을 생성합니다.
            # 실제로는 각 샘플의 진짜 레이블을 사용해야 합니다.
            y.append(np.random.randint(2))
        except:
            print(f"Error processing file: {sha256}")

    X = np.array(X)
    y = np.array(y)

    # 데이터 분할
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # 모델 학습
    model = GradientBoostingClassifier(n_estimators=100, random_state=42)
    model.fit(X_train, y_train)

    # 모델 평가
    train_score = model.score(X_train, y_train)
    test_score = model.score(X_test, y_test)

    print(f"Train accuracy: {train_score:.4f}")
    print(f"Test accuracy: {test_score:.4f}")

    # 새 모델 저장
    joblib.dump(model, 'new_gradient_boosting.pkl')

    print("New model saved as 'new_gradient_boosting.pkl'")